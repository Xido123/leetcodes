java中的集中基本数据类型
个占用多少字节
boolean 一字节八位
取值

byte 1字节有符号整数
short 2字节16位 有符号整数
int 4字节32位有符号整数
long 八字节有符号整数
char 2字节16位unicode
字符
float 4字节32位整数 
读点书
浮点数
 dobule   
 long8
 字节有符号整数
 double 8字节有符号浮点数
String能被继承吗 为什么
不可以被继承 因为String 类由final修饰符
而final所修饰的类是不能被继承的，实现细节不允许
改变 平常我们所用的String  str = “abc其实
和
通过和构造器产生的数据是有差别的
String 于Stringbuffer Stringbulid
的区别
String 字符串常量String
是常量 当创建之后既不能修改 可以给
可以通过Stringbuffer 和StringBUlider 创建String对象
常用的两个字符串操作
Stringbuffer是线程安全的，==也是final类被的
不能不允许被继承
被继承Stirng
String bulider 字符串变量 非线程安全




于StringBUffer一样都继承了和实现了
同样的
接口和类

方法除了没有用synch修饰意外基本一致
不同之处
在于在于最后toString 的时候 会直接返回一个新的
创建String对象
ArrayList于：Linkedlist的区别
1Arraylist 是基于索引的数据接口
它的底层数据结构是数组，它可以以哦
哦的时间复杂度对元素进行随机访问呢
与此对应 linkedlist 是以元素列表的形式存储dta的数据
每一个元素都和它的前要给和后一个元素连接在一起
在这种情况下，查找某个元素的时间复杂度、
是on 可以以哦
的是按
时间复杂度
因为
adang 

因为当元素备胎年的
被添加的时候 一个向前的元素，一个指向下一个元素
讲讲类的实例化 比如父类静态数据
构造函数 新字段
子类静态数据 构造函数 字段 当new的时候
他们的执行顺序


父类静态代码块
父类静态


加载连接初始化
加载连接初始化


深入理解java虚拟机
类加载器
深入剖析
执行了System。exit
虚拟机

程序正常执行结束
程序正在执行过程中遇到了异常错误而异常种植哦
异常终止
异常终止

由于操作系统 出现错误而导致虚拟机几次呢韩国
有序ca

由于操作系统
出现错误



类的加载连接和初始化


查找并加载类的二进制疏忽
二进制数据
查找并记载类的二进制数据
连接




验证 确保被加载的类的正确性
准备 为类的静态变量分配内存 并将其初始化为默认只


初始化
为类的静态变量赋予正确的初始值
抽象类和接口的区别
抽象类和接口都蹦你直接啊实例化
如果要实例化抽象类变量

2抽象类要被子类继承
接口要被实现

接口只能做方法声明，抽象类中可以做方法声明 也可以做方法
实现
接口里定义的便align只能是公共的静态的常量
抽象类中的变量是普通变量
抽象类中的方法必须被子类全部实现
抽象方法只能声明 不能实现 
抽象方法只能声明不能实现
如果一个类里有抽象方法，那么这个类只能你是
如果一个类之类

如果一个类里
之恩呢是

由抽象方法，那么这个类中只能是抽象类
 抽象方法只能声卡i给你
 声明不能被实现那
 抽象方法必须被实现
 所以不能是静态的
也不能是私有的
接口可继承街交口
接口

继承和聚合的区别， 继承s
是指  zaijava中国红


在java中公n继承
继承是指一个类继承另外的一个类
称为父类 父接口
的功能 并可以增加它自己的新功能 的能力
 继承是类与类或者几口之间最常见的关系
 在java中此类关系通过关键字 明确白哦是
 明确表示i，在设计室一把没有争议





 性






 聚合是关联关系 的一种特里，它体现的是个整个
 于部分拥有的东西
 ha是a 的关系
 此时整体与于部分是可以分离的
 他们乐意具有各自的设革命周锡区
 设革命周期、】

 生命周期
 部分可以属于多个整体
 对向
  也可以多个整体对象共享
  比如计算机于cpu表现

  表现在代码中公
  曾卡
  和gau


  之恩
  nio和bio的区别
  ios
  noi是面向流的





  nio是面向换从
  胡灿擦干

  缓冲
的一种特里，它体现的是个整个
block同步苏赛制
阻塞时io
同步组赛事iop、



同步组赛事iio
就
平常使用的创痛iio
同步阻塞式io 特点时
简单使用方便 并发处理哦能力第

negligence第

能力低

nio newio 同步非阻塞io 是菜鸟同

是传统io的升级，客户端和服务端 通过channer
通风道
通道同i性能
通信 实现了多路复用
多鲁耶夫用

多路复用
aiop

aio asynchronous 
aio是newio 的升级吗， 也叫nio2 实现
了异步非阻塞io 异步io的操作基于事件和回调检查

回调机制
三种
到哪里模式


单例模式实现
饿汉式懒汉式 双重价差

双重检查
双重昂价差

栓冲
双超给你见擦
刷才能化工
shaung
双重ji
双重
加擦汗
见擦汗
就按察
钾钠和
检查
就按擦汗i
检查
检查
加餐和
检查
情节和oo设计概念
谈谈访问修饰符，
public private preteceted
defaukt
defauleyt

在应用中的设计的概念
反复问
访问修饰符

主要标识修饰鲁艾的快的
标识修饰快的
作用域方柏霓ge
作用域
发辫
方便隔离
方便隔离
房屋
方法胡
防护
fanghu
防护
贩卖公牛
防护
反骨
翻荒古
java语言中访问想兼职

访问限制最款的先izh



java访问限制最宽的先祝福u
先祝福
限制符
以啊不
一般称之为
公共的
被其修饰的类属性
以及方法不仅了可以

可以跨域访问
而且挎包

private jva中访问限制最窄的修饰符，一般陈志伟
称之为四哟肚饿
私有的 被其修饰的类属性和方法只能被该来的
类的对象访问
其子类不饿能范围哥哥nbu
 不能访问
 更不能垮了ifangw

 kua


 其子类不能访问父类的私有属性
 属性以及方法只能被类本省色号功n
 简要描述如何安装要给配置一个开源的hadoop 只描述
 即可
 列出完整 的步骤

 1 创建一个用户和用户组 用来管理hadoop项目
 2 修改指定ip地址 vim 。/etc/sysconfig/network-script.ifcfg-eth0
3 修改主机名， vim /etc/sysconfig/network
4 修改host主机名和ip地址。， 地址映射 vim /etc/host
script查克拉南
查看防火墙，状态并关闭防火墙


service iptables status
service iptables status
查看防火墙开机启动状态，chkconfig iptables
 off 
 chkconfig iptables off；ost

 ArrayList于：Linkedlist的区别


 安装ssh并配置免密登录，ssh-keygen -t rsa

 执行完这个命令之后 ， 会生成两个文件夹id_rsa 私钥 id————
 id_rsa_pub 公钥
 将公钥拷贝到免登录的机器上
 cat


上传并安装，jdk 
配置
conf文件




对于hadoop2
 hadoop-env.shaung


 hadoop-env.sh    core-site.xml hdfs-site.xml mapread
 site.xml
yarn-site.xml alaves 文件
安装制冷



几千年

zookeeper


namenode  
datanode 他是一个存储实际数据的slave节点
secondary name你都二
弄得

namenode



文件系统
温江系统
温江系统
温江系统

Each human being is born as something new something 
that never existed before

THe lesson of the story i suggested was that in some naing 



方法区 虚拟机栈 本地方法区
程序计数器
堆 栈        程序计数器
堆栈    


执行引擎
 本地库接口

程序计数器， 内存空间小 线程私有，  字节码解释器
工作就是通过改变这个计数器的值来选取下一条下徐娅
需要执行的指令的字节码指令，分支               训话n
循环， 跳转，异常处理， 线程恢复 
等基础功能都需要依赖计数器玩车女
完成
入轨哦线程
都西亚
分支循环跳转 异常处理i按车工
西安城
西安城hui
西安目测韩国
西安城
西安城
西安城
西安车如果
线程恢复
等丢呀
都啊
都选哦

都需呀o
秭归县不过

主席给你



java虚拟机栈， 线程私有 生命周期和线程一直，描述的
是java中的方法执行的没存m
内存模型  每个方法在执行的时候 都会创建一个栈帧
stack frame 用于存储局部变量表， 操作数栈动态链表
方法出等
饭
等信息
每一个方法从调用直至结束                        就ji

就对应着一个栈帧从虚拟机栈中入栈到出栈的过程


局部变量表
局部变量表 存放了编译期可知的各种基本类型 
对象引用和return
addres 
类型的指令
存放了





stackover发
线程请求的栈深度大于虚拟机所允许的深度




outofmemoryerror 如果虚拟机栈可以动态扩展而扩展是无法盛情as
盛情带

申请到足够的内存
本地方法栈本地方法栈
本地方法栈
本代方法栈
本第方法栈
本地方法炸
本代犯法
本代
本地
本地
本地
本地
被你的
被第
滴哦

对于大多数因公来说

应用来说 这块区域是jvm 所管理的内存中最大的一块
线程共享 ，主要是存放对象实例和数组
内部会划分出多个 线程私有的分配缓冲区， 可以位于
物理上不连续的空间，。 但是逻辑上要连续












如果堆中没有内存完成实力分配， 并且堆中无法扩展时
抛出该异常



方法区








方法区
运行时常量池
运行时常量IC



遇到new指令时，首先检查这个指令的参数是否能
在常量池中点各位到一个类的符号引用，
并且检查这个符号应用代表的类是否已经被夹杂i
解析和初始化过如果没有 执行相应的类加载

执行类加载检查过程中， 为新对象分配u内粗n
内存大小
在类完成后白呢看

执行相应的累加载

内存空间分配

对象头包含来那部分
联邦古额
两部分不放呢
不分南北
不放呢
 部分
 部分
在这花好月圆叶
这世上还有谁
能与你比翼双飞
明月即使有
把酒问情人天
今昔是何年
就在这花好月圆夜
有情人儿
成分刷不

能与你鸳鸯戏水
比翼双刷分非
befo
你吩咐
把 酒问请rain
不知天上
宫阙
今是

hash 表也成为散列表， 也有直接译作哈希表， hash表是一种根据关键字值 

keyvalue   而直接进行访问的数据结构 它基于数组通过
把关键自映射到数组的某个下标来加快查询速度 但是又和数组链表 数等
等结构不同 在这些数据结构中 查找某个关键字 筒仓徐娅
’通常需要遍历整个数据结构 也就是0
弄得
on的时间集 但是对于hash表来说， 只是01的时间及


时间集








注意这里有个重要的问题就是如何把关键子转换为数组的下标 这个转换的函数
称为hash函数 ，也称散列表， 转换的过程也称为哈社会化

哈市
hash化






哈希函数的引入

大家都用过字典
字典的优势就是我们可以通过前面的目录快速定位日

到所要查找的单词。 如果我们想把一本英文字典的每个单词 从
a刀片 zyzzyva  zyzzyva  牛晶字典戴拿的
都可以写入计算机内存 一遍快速读写 那么哈希表是个不错的选择  
这里是我们将范围缩小点  
比如想在内存中存储5000个英文单词 我们额可以用

可能想到每个单词 会占用一个数组单元   那么数组的大小是5000
比如想在内存中存储

单词和数字的关系               
cats = 
把巨大的数范围压缩到较小的数字范围， 那么肯定会有几个不同的单词
哈希化到同一个数组下标，即产生了冲突 ，主要是存放对象实例和数组冲突

冲突可能会导致
哈希化方案无法实施 前面我们说指定的数组范围大小 是实际存储数据的两倍
因为可能会有一半的空间是空着的，所以
当冲突的时候 一个方法是通过系统的方法找到数组的一个空位，并把这个单词哈希化的
结果为4521 但是它的位置已经被单词arsnip 占用了 那么我们会考虑将单词  放在
后买你的
以及方法不仅了可以的一个
位置上

另一种创建一个自来你huo
自恋或者数组
开放地址法，若数据不能直接存放在由哈希函数所计算出来的数组下标是
就要寻找其他的位置，分别有三种帆帆发
线性探测 二次探测 以及再哈希化


1
线性探测  
再线性探测中  
它会线性的查找控股吧但hun


是要插入数据的位置，但是它已经被占用了  那么就使用5422 如果也被占用了

那么， 使用下一位
一次类推，数组下标一次递增 知道找到空白的位置，  这就叫做线性探针  
因为它沿着数组下标一步一步的查找空白单元















































































































































































































































































































































































































































































